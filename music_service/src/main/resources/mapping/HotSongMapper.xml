<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wayne.music_service.DAO.HotSongMapper">

  <resultMap id="BaseResultMap" type="com.wayne.music_service.model.HotSong">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="play_list_id" jdbcType="VARCHAR" property="play_list_id" />
    <result column="song_id" jdbcType="VARCHAR" property="song_id" />
    <result column="song_name" jdbcType="VARCHAR" property="song_name" />
    <result column="songer" jdbcType="VARCHAR" property="songer" />
  </resultMap>
  <sql id="Base_Column_List">
    id, play_list_id, song_id, song_name, songer
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    *
    from b_hot_song
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectRandomList" resultType="com.wayne.music_service.model.HotSong">
    SELECT <include refid="Base_Column_List" />
     FROM b_hot_song
     ORDER BY  RAND() LIMIT 20
  </select>
  <select id="selectChenMusic" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT *
     FROM b_hot_song
     WHERE songer ="薛之谦";
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from b_hot_song
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wayne.music_service.model.HotSong">
    insert into b_hot_song (id, play_list_id, song_id,
      song_name, songer)
    values (#{id,jdbcType=BIGINT}, #{play_list_id,jdbcType=VARCHAR}, #{song_id,jdbcType=VARCHAR},
      #{song_name,jdbcType=VARCHAR}, #{songer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wayne.music_service.model.HotSong">
    insert into b_hot_song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="play_list_id != null">
        play_list_id,
      </if>
      <if test="song_id != null">
        song_id,
      </if>
      <if test="song_name != null">
        song_name,
      </if>
      <if test="songer != null">
        songer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="play_list_id != null">
        #{play_list_id,jdbcType=VARCHAR},
      </if>
      <if test="song_id != null">
        #{song_id,jdbcType=VARCHAR},
      </if>
      <if test="song_name != null">
        #{song_name,jdbcType=VARCHAR},
      </if>
      <if test="songer != null">
        #{songer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wayne.music_service.model.HotSong">
    update b_hot_song
    <set>
      <if test="play_list_id != null">
        play_list_id = #{play_list_id,jdbcType=VARCHAR},
      </if>
      <if test="song_id != null">
        song_id = #{song_id,jdbcType=VARCHAR},
      </if>
      <if test="song_name != null">
        song_name = #{song_name,jdbcType=VARCHAR},
      </if>
      <if test="songer != null">
        songer = #{songer,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wayne.music_service.model.HotSong">
    update b_hot_song
    set play_list_id = #{play_list_id,jdbcType=VARCHAR},
      song_id = #{song_id,jdbcType=VARCHAR},
      song_name = #{song_name,jdbcType=VARCHAR},
      songer = #{songer,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>