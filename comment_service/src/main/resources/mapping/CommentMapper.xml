<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wayne.comment.DAO.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.wayne.comment.model.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="song_id" property="song_id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="publish_time" property="publish_time" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="extension" property="extension" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.wayne.comment.model.Comment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, song_id, user_id, publish_time, status, extension
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectSongComment" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_comment
    where song_id = #{song_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from b_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wayne.comment.model.Comment" >
    insert into b_comment (id, song_id, user_id, 
      publish_time, status, extension, 
      content)
    values (#{id,jdbcType=BIGINT}, #{song_id,jdbcType=BIGINT}, #{user_id,jdbcType=BIGINT},
      #{publish_time,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{extension,jdbcType=VARCHAR},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wayne.comment.model.Comment" >
    insert into b_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="song_id != null" >
        song_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="publish_time != null" >
        publish_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="extension != null" >
        extension,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="song_id != null" >
        #{song_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="publish_time != null" >
        #{publish_time,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="extension != null" >
        #{extension,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wayne.comment.model.Comment" >
    update b_comment
    <set >
      <if test="song_id != null" >
        song_id = #{song_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="publish_time != null" >
        publish_time = #{publish_time,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="extension != null" >
        extension = #{extension,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wayne.comment.model.Comment" >
    update b_comment
    set song_id = #{song_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      publish_time = #{publish_time,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      extension = #{extension,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wayne.comment.model.Comment" >
    update b_comment
    set song_id = #{song_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      publish_time = #{publish_time,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      extension = #{extension,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>